<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <data noupdate='1'>
        <record id="ir_sequence_emp_id_generate" model="ir.sequence">
            <field name="name">Employee: ID Generate</field>
            <field name="implementation">standard</field>
            <field name="code">employee.id</field>
            <field name ="active" eval="True"/>
            <field name ="company_id" eval="False"/>
            <field name="padding">5</field>
            <field name="number_increment">1</field>
            <field name="number_next_actual">1</field>
        </record>
        <record id="employee_emp_id_generate" model="base.automation">
            <field name="name">Employee: ID Generate</field>
            <field name="model_id" ref="model_hr_employee"/>
            <field name="state">code</field>
            <field name="code">if not record.emp_id:
                seq = env['ir.sequence'].next_by_code('employee.id')
                record.write({'emp_id': seq})
                record.write({'registration_number': seq})
                record.write({'pin': seq})
                record.write({'barcode': seq[-4:]})</field>
            <field name="trigger">on_create</field>
            <field name="filter_domain">[["emp_id","=",False]]</field>
            <field name="active" eval="True"/>
        </record>
        <record id="employee_shift_generate" model="base.automation">
            <field name="name">Employee: First Shift Generate</field>
            <field name="model_id" ref="model_hr_employee"/>
            <field name="state">code</field>
            <field name="code">if record.shift_group:
  if record.joining_date:
    activeDate = record.joining_date
  else:
    activeDate = record.create_date
_name = record.id
_activationDate = activeDate
_shift = record.shift_group.id
ref_model = env['shift.transfer']
existing_records = env['shift.transfer'].search([('transferGroup', '=', _shift), ('name', '=', _name)])
if len(existing_records) == 0:
  new_entry = ref_model.create({'name':_name, 'activationDate':_activationDate, 'transferGroup':_shift})</field>
            <field name="trigger">on_create</field>
            <field name="filter_domain">[["shift_group","!=",False]]</field>
            <field name="active" eval="True"/>
        </record>
    </data>
</odoo>